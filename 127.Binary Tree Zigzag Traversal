#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> ans;
    if(root==NULL)
    {
        return ans;
    }

queue<BinaryTreeNode<int> *> q;
q.push(root);

bool leftToright=true;
while(!q.empty())
{
    int size=q.size();
    vector<int> temp(size);
    for(int i=0;i<size;i++)
    {
        BinaryTreeNode<int> *curr=q.front();
        q.pop();

        int index=leftToright ? i:size-i-1;
        temp[index]=curr->data;
         if(curr->left)
             {
           q.push(curr->left);

                }
                if(curr->right)
                {
                    q.push(curr->right);
                }
               
    }
     leftToright=!leftToright;
                    for(auto i: temp)
                    {
                        ans.push_back(i);
                    }
   
}

return ans;
    // Write your code here!
}
